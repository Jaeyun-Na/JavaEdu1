package kr.co.OOP;

public class objectOriented_8_상속과다형성 {

	/*
	 *	8-1	상속이란?
	 * 	
	 * 	객체 지향 프로그래밍의 중요한 특징 중 하나가 상속(inheritance)임. 상속은 우리가 일반적으로 알 듯 무엇인가를 물려받는다는 의미임.
	 * 	일례로 부묘가 자식에게 물려주는 재산을 상속이라함. 부모에게 재산을 상속받으면 상속받은 재산을 자신의 것으로 사용할 수 있음.
	 * 	객체 지향 프로그램에서도 마찬가지임. B 클래스가 A 클래스를 상속받으면 B 클래스는 A 클래스의 멤버 변수와 메서드를 사용할 수 있음.
	 * 	객체 지향 프로그램은 유지 보수하기 편하고 프로그램을 수정하거나 새로운 내욜을 추가하는 것이 유연한데, 그 기반이 되는 기술이 바로 상속임.
	 * 
	 * 	-클래스의 상속
	 * 
	 * 상속을 구체적으로 학습하기 전에 자바에서 상속과 관련하여사용하는 용어롸 문법에 대해 알아보자.
	 * B 클래스가 A 클래스에서 상속받는다고 할 때 다음과 같다.
	 * 
	 * 	(상위 클래스)	| A 클래스 |
	 *	 				^
	 *					|
	 * 					----------- A 클래스가 B 클래스에게 상속한다 = B 클래스가 A 클래스를 상속받는다.
	 * 					|
	 * 	(하위 클래스)	| B 클래스 |
	 * 
	 * 상속을 하는 클래스에서 상속을 받는 클래스로 화살표가 갈 것 같지만, 클래스 간 상 속을 표현할 때는 위 그림에서 표현한 것처럼 상속받는 클래스에서 상속하는 클래스로  화살표가 가므로 헷갈리면 안 됨.
	 * 부모 클래스를 '상위 클래스', 자식 클래스를 '하위 클래스'라고함.
	 * 
	 * 클래스 상속 문법
	 * 자바 문법으로 상속을 구현할 때는 extends 예약어를 사용함. 이때 사용하는 extends 예약어는 '연장, 확장하다'의 의미. 즈 A가 가지고 있는 속성이나 기능을 추가로 확장하여 B 클래스를 구현한다는 뜻.
	 * 그러면 일반적인 클래스 A에서 더 구체적인 클래스 B가 구현됨.
	 * class B extands A{
	 * }
	 * 위 코드는 'B 클래스가 A 클래스를 상속받는다'라고 함.
	 * 
	 * 	포유류(원숭이, 고래, 사자... 등) 	<--				 사람
	 * 	class Mammal{						class Human extends Mammal{
	 * 		...						<--			...
	 * 	}									 }
	 * 
	 * 포유류는 사람보다 일반적인 개념임. 즉 사람은 포유류의 특징과 기능을 기본으로 더 많거나 다른 특징과 기능을 가지고 있음. 이렇게 상속 관계에서는 상위 클래스가 하위 클래스보다 일반적인 개념이고, 하위 클래스는 상위 클래스보다
	 * 구체적인 클래스가 됨. 
	 * 
	 * 	-상속을 사용하여 고객 관리 프로그램 구현하기
	 * 
	 * 회사에서 고객 정보를 가지고 맞춤 서비스를 제공하기 위해 고게ㅐㄱ 관리 프로그램으로 구현하려고 함. 그러면 먼저 고객 클래스가 있어야함 고객 클래스를 구현하려면 클래스 속성을 멤버 변수로 선언하면 됨.
	 * 이 예제에서는 고객 아이디, 이름, 고객 등급, 보너스 포인트, 보너스 포인트 적립 비율을 속성으로 선언.
	 * (inheritance - Customer.java)
	 * 
	 * 예제에서 사용한 멤버 변수를 살펴보면 다음과 같음
	 * 
	 * 	customerID		고객 아이디
	 *	customerName	고객 이름
	 *	customerGrade	고객 등급 - 기본생성자에서 지정되는 기본 등급은 SILVER임.
	 *	bonusPoint		고객의 보너스 포인트 - 고객이 제품을 구매할 경우 누적되는 보너스 포인트임.
	 *	bonusRatio		보너스 포인트 적립 비율 - 고객이 제품을 구매할 때 구매 금액의 일정 비율이 보너스포인트로 적립됨. 이때 계산되는 적립 비율임.
	 * 		   							  - 기본 생성자에서 지정되는 적입 비율은 1%dla wmr 10,000월짜리를 사면 100원이 적립됨.
	 * 
	 * 모든 멤버 변수를 반드시 private으로 선언할 필요 없음. 필요에 따라 멤버 변수나 메서드를 외부에 노출하지 않을 목적일 때 private으로 선언함. 예제에서 사용한 메서드.
	 * 
	 * Customer()			기본 생성자임. 고객 한명이 새로 생성되면 customerGrade는 SILVER이고, bonusPoint는 1%로 지정됨.
	 * calcPrice()			제품에 대해 지불해야 하는 금액을 계산하여 반환됨. 할인되지 않는 경우 가격을 그대로 반환함. 그리고 가격에 대해 보너스 포인트 비율을 적용하여 보너스 포인트를 적립함.
	 * showCustomerInfo()	고객 정보를 출력함. 고객 이름과 등급, 현재 적입된 포인트를 보여줌.
	 * 
	 * 새로운 고객 등급이 필요한 경우
	 * ------------------------------------------------------------------------------------------------------------------------------
	 * 예제 시나리오
	 * 고객이 점점 늘어나고 판매도 많아지다보니 단곡 고객이 생김. 단골 고객은 회사 매출에 많은 기여를 하는 우수 고객임. 이 우수 고객에서 좋은 혜택을 주고 싶음.
	 * 우수 고객 등급은 VIP이고, 다음과 같은 혜택을 제공함.
	 * 	-제품을 살 때는 항상 10% 할인해 줌.
	 * 	-보너스 포인트를 5% 적입해 줌.
	 * 	-담당 전문 상담원을 배정해 줌.
	 * ------------------------------------------------------------------------------------------------------------------------------
	 * 
	 * 위 같은 요구 사항을 구현하는 방법은 무엇일까. 이미 Customer 클래스가 존재하므로 Customer 클래스에 VIP 고객에 필요한 변수와 메서드까지 함께 포함하여 구현. 하지만 이렇게 구현하게되면 Customer 클래스의 코드가 복잡해짐.
	 * 게다가 일반 고객의 인스턴스를 생성할 때는 VIP 고객과 관련된 기능은 전혀 필요 없는데 VIP 고객의 내용까지 같이 생성되어 낭비가 발생. 이러한 경우는 VIPCustomer 크래스를 따로 만드는것이 좀음.
	 * (inheritance - VIPCustomer.java)
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 */
}
