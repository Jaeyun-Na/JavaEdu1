package kr.co.OOP;

public class objectOriented_8_상속과다형성 {

	/*
	 *	8-1	상속이란?
	 * 	
	 * 	객체 지향 프로그래밍의 중요한 특징 중 하나가 상속(inheritance)임. 상속은 우리가 일반적으로 알 듯 무엇인가를 물려받는다는 의미임.
	 * 	일례로 부묘가 자식에게 물려주는 재산을 상속이라함. 부모에게 재산을 상속받으면 상속받은 재산을 자신의 것으로 사용할 수 있음.
	 * 	객체 지향 프로그램에서도 마찬가지임. B 클래스가 A 클래스를 상속받으면 B 클래스는 A 클래스의 멤버 변수와 메서드를 사용할 수 있음.
	 * 	객체 지향 프로그램은 유지 보수하기 편하고 프로그램을 수정하거나 새로운 내욜을 추가하는 것이 유연한데, 그 기반이 되는 기술이 바로 상속임.
	 * 
	 * 	-클래스의 상속
	 * 
	 * 상속을 구체적으로 학습하기 전에 자바에서 상속과 관련하여사용하는 용어롸 문법에 대해 알아보자.
	 * B 클래스가 A 클래스에서 상속받는다고 할 때 다음과 같다.
	 * 
	 * 	(상위 클래스)	| A 클래스 |
	 *	 				^
	 *					|
	 * 					----------- A 클래스가 B 클래스에게 상속한다 = B 클래스가 A 클래스를 상속받는다.
	 * 					|
	 * 	(하위 클래스)	| B 클래스 |
	 * 
	 * 상속을 하는 클래스에서 상속을 받는 클래스로 화살표가 갈 것 같지만, 클래스 간 상 속을 표현할 때는 위 그림에서 표현한 것처럼 상속받는 클래스에서 상속하는 클래스로  화살표가 가므로 헷갈리면 안 됨.
	 * 부모 클래스를 '상위 클래스', 자식 클래스를 '하위 클래스'라고함.
	 * 
	 * 클래스 상속 문법
	 * 자바 문법으로 상속을 구현할 때는 extends 예약어를 사용함. 이때 사용하는 extends 예약어는 '연장, 확장하다'의 의미. 즈 A가 가지고 있는 속성이나 기능을 추가로 확장하여 B 클래스를 구현한다는 뜻.
	 * 그러면 일반적인 클래스 A에서 더 구체적인 클래스 B가 구현됨.
	 * class B extands A{
	 * }
	 * 위 코드는 'B 클래스가 A 클래스를 상속받는다'라고 함.
	 * 
	 * 	포유류(원숭이, 고래, 사자... 등) 	<--				 사람
	 * 	class Mammal{						class Human extends Mammal{
	 * 		...						<--			...
	 * 	}									 }
	 * 
	 * 포유류는 사람보다 일반적인 개념임. 즉 사람은 포유류의 특징과 기능을 기본으로 더 많거나 다른 특징과 기능을 가지고 있음. 이렇게 상속 관계에서는 상위 클래스가 하위 클래스보다 일반적인 개념이고, 하위 클래스는 상위 클래스보다
	 * 구체적인 클래스가 됨. 
	 * 
	 * 	-상속을 사용하여 고객 관리 프로그램 구현하기
	 * 
	 * 회사에서 고객 정보를 가지고 맞춤 서비스를 제공하기 위해 고게ㅐㄱ 관리 프로그램으로 구현하려고 함. 그러면 먼저 고객 클래스가 있어야함 고객 클래스를 구현하려면 클래스 속성을 멤버 변수로 선언하면 됨.
	 * 이 예제에서는 고객 아이디, 이름, 고객 등급, 보너스 포인트, 보너스 포인트 적립 비율을 속성으로 선언.
	 * (inheritance - Customer.java)
	 * 
	 * 예제에서 사용한 멤버 변수를 살펴보면 다음과 같음
	 * 
	 * 	customerID		고객 아이디
	 *	customerName	고객 이름
	 *	customerGrade	고객 등급 - 기본생성자에서 지정되는 기본 등급은 SILVER임.
	 *	bonusPoint		고객의 보너스 포인트 - 고객이 제품을 구매할 경우 누적되는 보너스 포인트임.
	 *	bonusRatio		보너스 포인트 적립 비율 - 고객이 제품을 구매할 때 구매 금액의 일정 비율이 보너스포인트로 적립됨. 이때 계산되는 적립 비율임.
	 * 		   							  - 기본 생성자에서 지정되는 적입 비율은 1%dla wmr 10,000월짜리를 사면 100원이 적립됨.
	 * 
	 * 모든 멤버 변수를 반드시 private으로 선언할 필요 없음. 필요에 따라 멤버 변수나 메서드를 외부에 노출하지 않을 목적일 때 private으로 선언함. 예제에서 사용한 메서드.
	 * 
	 * Customer()			기본 생성자임. 고객 한명이 새로 생성되면 customerGrade는 SILVER이고, bonusPoint는 1%로 지정됨.
	 * calcPrice()			제품에 대해 지불해야 하는 금액을 계산하여 반환됨. 할인되지 않는 경우 가격을 그대로 반환함. 그리고 가격에 대해 보너스 포인트 비율을 적용하여 보너스 포인트를 적립함.
	 * showCustomerInfo()	고객 정보를 출력함. 고객 이름과 등급, 현재 적입된 포인트를 보여줌.
	 * 
	 * 새로운 고객 등급이 필요한 경우
	 * ------------------------------------------------------------------------------------------------------------------------------
	 * 예제 시나리오
	 * 고객이 점점 늘어나고 판매도 많아지다보니 단곡 고객이 생김. 단골 고객은 회사 매출에 많은 기여를 하는 우수 고객임. 이 우수 고객에서 좋은 혜택을 주고 싶음.
	 * 우수 고객 등급은 VIP이고, 다음과 같은 혜택을 제공함.
	 * 	-제품을 살 때는 항상 10% 할인해 줌.
	 * 	-보너스 포인트를 5% 적입해 줌.
	 * 	-담당 전문 상담원을 배정해 줌.
	 * ------------------------------------------------------------------------------------------------------------------------------
	 * 
	 * 위 같은 요구 사항을 구현하는 방법은 무엇일까. 이미 Customer 클래스가 존재하므로 Customer 클래스에 VIP 고객에 필요한 변수와 메서드까지 함께 포함하여 구현. 하지만 이렇게 구현하게되면 Customer 클래스의 코드가 복잡해짐.
	 * 게다가 일반 고객의 인스턴스를 생성할 때는 VIP 고객과 관련된 기능은 전혀 필요 없는데 VIP 고객의 내용까지 같이 생성되어 낭비가 발생. 이러한 경우는 VIPCustomer 크래스를 따로 만드는것이 좀음.
	 * (inheritance - VIPCustomer.java)
	 * 
	 * 클래스를 만들고 보니 앞에서 만든 Customer 클래스와 겹치는 멤버 변수와 메서드가 보임. CalcPrice() 메서드는 이름은 같지만 구현 내용은 다름. VIP 고객도 고객임. 다만 일반 고객에게 제공하는 혜택을 기본으로 제공하고
	 * 추가 속성과 메서드가 있는검. 이건 경우사 상속을 사용함.
	 * 즉 CUstomer 클래스에 일반 고객의 속성과 기능이 이미 구현되어 있기 떄문에 VIPCustomer 클래스는 Customer 클래스를 상속받고 VIP 고객에게 필요한 추가 속성과 기능을 구현하는것임. Customer 클래스를 상속한 VIPCustomer 클래스의 코드는 다음과 같다.
	 * (VIPCustomer.java -> 기존 변수 입력방식(주석 처리)이 아닌 상속방식으로 수정)
	 * 
	 * VIPCustomer 클래스의 코드가 간단해졌음. Customer 클래스에 이미 선언되어 있는 cusromerID, customerName, customerGrade, bonusPoint, bonusRatio 멤버 변수와 calcPrice(), showCustomerInfo() 메서드는 상속을 받아서 사용할 것이기 때문에 구현하지 않음.
	 * 해당 코드에서는 두 가지 문제가 있음. 첫째, customerGrade 변수에서 오류가 발생. 상위 클래스에 선언한 변수인데 오류가 발생한 이류는 private 변수이기 때문. 해당 변수는 외부클래스에서 사용할 수 없음.
	 * 두번째는 VIP 고객에서 제공하는 혜택인 할인율 과 세일 가격을 어떻게 적용할지 구현하지 않았다는 점임.-> 이부분은 8-3 메서드 오버라이딩에서.
	 * 
	 * 상위 클래스 변수를 사용하기 위한 protected 예약어
	 * customerGrade 변수에서 발생하는 오류부터 수정해보자. 이 오류는 상위 클래스에 선언한 customerGrade가 private 변수이기 때문에 발생. 상위 클래스에 작성한 변수나 메서드 중 외부 클래스에서 사용할 수 없지만 하위 클래스에서는 사용할 수 있도록 지정하는 예약어가
	 * 바로 protected임. 상위받은 하위 클래스에서는 public처럼 사용할 수 있는 검임. 즉 protected는 상속된 하위 클래스를 제외한 나머지 외부 클래스에서는 private와 동일한 역할을 함.
	 * 
	 * Customer 클래스에 있는 private 변수를 다른 하위 크래스에서도 사용할 수 있도록 protected로 바꿔보겠음. 그리고 protected로 선언한 customerID, customerName, customerGrade 변수를 사용하기 위해 get(), set() 메서드를 추가해보자.
	 * (Customer.java - private 변수를 protected로 변경, get(),set() 생성)
	 * 
	 * protected 예약어로 선언한 변수는 외부 클래스에는 private 변수처럼 get() 메서드를 사용해 값을 가져올 수 있고, set() 메서드를 사용해 값을 지정할 수 있음. customer 클레스를 상속받은 VIPCustomer 클래스는 protected로 선언한 변수를 상속받게 되고,
	 * 나머지 public 메서드도 상속받아 사용할 수 있음. 위와 같이 protected로 선언하면 VIPCustomer 부분의 오류는 사라짐.
	 * 
	 * 테스트 프로그램 실행하기
	 * 간단한 테스트 프로그램을 만들어 두 클래스를 생성해 보자
	 * ----------------------------------------------------------------------------------------------------------
	 * 예제 시나리오
	 * 일반 고객 1명, VIP 고객 1명이 있음. 일반 고객의 이름은 이순신, ID는 10010, 현재 보유 보너스 포인트 1000점.
	 * VIP 고객의 이름은 김유신, ID는 10020, 현재 보유 보너스 포인트는 10000점
	 * ----------------------------------------------------------------------------------------------------------
	 * 
	 * 새로운 Customer 클래스를 생성하고 customerLee 참조 변수에 대입.
	 * VIPCustomer 클래스를 생성하고 customerKim 참조 변수에 대입.
	 * VIPCustomer가 Customer를 상속 했기 떄문에 고객 아이디, 고객 이름의 메서드를 사용할 수 있음. 두 고객의 속인인 아이디, 이름,보너스 포인트를 지정하고 showCustomerInfo() 메서드를 사용해 고객 정보를 출력함.
	 * 
	 * 8-2 상속에서 클래스 생성과 형 변환
	 * 
	 * 하위 클래스가 생성될 때 상위 클래스의 생성자가 먼저 호출됨. 상속 관계에서 클래스의 생성 과정을 사펴보면 하위 클래스가 상위 클래스의 변수와 메서드를 사용할 수 있는 이유와 하위 클래스가 상위 클래스의 자료형으로 형 변환을 할 수 있는 이유를 이해할 수 있음.
	 * 
	 * -하위 클래스가 생성되는 과정
	 * 상속을 받는 아휘 클래스는 상위 클래스의 변수와 메서드를 사용할 수 있음. 즉 CustomerTest 예제를 살펴보면, VIPCustomer 클래스로 선언한 customerKim 인스턴스는 상속받은 상위 클래스의 변수를 자기 것처럼 사용할 수 있음.
	 * 변수를 사용할 수 있다는 것은 그 변수를 저장하고 있는 메모리가 존재한다는 뜻. VIPCustomer 클래스의코드를 보면 해당 변수가 존재하지 않음. Customer 클래스를 상속받았을 뿐. 상속된 아휘 클래스가 생성되는 과정을 다시 생각해 볼 필요가 있음.
	 * 테스트를 하기 위해 Customer와 VIPCustomer 클래스 생성자에 출력문을 추가.
	 * (Customer.java, VIPCustomer.java -> 각각 출력문 추가)
	 * 
	 * CustomerTest2 출력값을 보면 상위 클래스의 Customer() 생성자가 먼저 호출되고 그다음에 VIPCustomer()가 호출되는 것을 할 수 있음. 정리하면 상위 클래스를 상속받은 하위 클래스가 생성될 때는 반드시 상위클래스가 먼저 호출됨. 상위 클래스 생성자가 호출될 때 상위 클래스의 멤버 변수가 메모리에 생성되는것임.
	 * 하위 클래스 VIPCustomer가 생성될 때 메모리 구조를 간다히 그려보면 다음과 같음.
	 * 
	 * 	  힙 메모리
	 * 	customerID		-
	 *  customerName	|
	 *  customerGarade	|--> Customer() 생성자 호출 -> Customer클래스의 멤버 변수가 메모리에 생성됨
	 *  bonusPoint		|
	 *  bonusRatio	    -
	 *  agentID			-
	 *  salesRatio		---> VIPCustomer() 생성자 호출 -> VIPCustomer 클래스의 멤버 변수가 메모리에 생성됨
	 *  
	 *  상위 클래스의 변수가 메모리에 먼저 생성되기 떄문에 하위 클래스에서도 이 값들을 모두 사용할 수 있음. 08-1에서 상위 클래스의 변수를 private으로 선언한 경우에 하위 클래스에서 해당 변수를 사용할 수 없었던 건은 단지 하위 클래스에서 접근할 수 없었을 분임.
	 *  지금까지는 하위 클래스가 생성될 떄 상위 클래스가 먼저 만들어진다는 것을 배웠음. 이제 어떤과정으로 상위 클래스가 생성되는지 알아보자.
	 *
	 * 
	 */
}
